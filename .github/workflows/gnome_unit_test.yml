name: gnome_unit_test

on:
  push:
    branches: [ main, develop, 'release/**', 'hotfix/**', 'feature/**'] 
  pull_request:
    branches: [ main, develop, 'release/**', 'hotfix/**', 'feature/**'] 

env:
  THUNDER_REF: "R4.4.1"

jobs:
  unit-tests:
    name: Build and run unit tests
    runs-on: ubuntu-22.04
        
    steps:
      - name: Install packages
        run: |
          sudo apt update
          sudo apt-get install -y pkg-config libglib2.0-dev libnm-dev libcurl4-openssl-dev lcov ninja-build

      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install jsonref

      - name: Configure CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.16.x'

      - name: Checkout thunder repositories
        run: |
          git clone https://github.com/rdkcentral/ThunderTools ThunderTools --branch ${{ env.THUNDER_REF }}
          git clone https://github.com/rdkcentral/Thunder Thunder --branch ${{ env.THUNDER_REF }}
         
      - name: Build ThunderTools
        run: >
          cmake
          -S "${{github.workspace}}/ThunderTools" -B build/ThunderTools
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DGENERIC_CMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          &&
          cmake --build build/ThunderTools --target install -j8

      - name: Build Thunder
        run: >
          cmake
          -S "${{github.workspace}}/Thunder" -B build/Thunder
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DBUILD_TYPE=Debug
          -DBINDING=127.0.0.1
          -DPORT=9998
          &&
          cmake --build build/Thunder --target install -j8

      - name: Checkout networkmanager
        uses: actions/checkout@v3
        with:
          path: networkmanager

      - name: Build networkmanager with Gnome libnm Proxy
        run: >
          cmake
          -S "${{github.workspace}}/networkmanager"
          -B build/GnomeLibnmNetworkmanager
          -DCMAKE_TOOLCHAIN_FILE="${{ env.TOOLCHAIN_FILE }}"
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DCMAKE_CXX_FLAGS=" -fprofile-arcs -ftest-coverage "
          -DENABLE_GNOME_NETWORKMANAGER=ON
          -DENABLE_PLUGIN_CLI=ON
          &&
          cmake --build build/GnomeLibnmNetworkmanager --target install -j8

      - name: Build networkmanager with Gnome GDBUS Proxy
        run: >
          cmake
          -S "${{github.workspace}}/networkmanager"
          -B build/GnomeGdbusNetworkmanager
          -DCMAKE_TOOLCHAIN_FILE="${{ env.TOOLCHAIN_FILE }}"
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr"
          -DCMAKE_MODULE_PATH="${{github.workspace}}/install/tools/cmake"
          -DCMAKE_CXX_FLAGS=" -fprofile-arcs -ftest-coverage "
          -DENABLE_GNOME_NETWORKMANAGER=ON
          -DENABLE_GNOME_GDBUS=ON
          -DENABLE_PLUGIN_CLI=ON
          &&
          cmake --build build/GnomeGdbusNetworkmanager --target install -j8


